apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "3000"
      prometheus.io/scrape: "true"
    creationTimestamp: "2022-04-07T18:29:00Z"
    name: grafana
    namespace: monitoring
    resourceVersion: "705232"
    selfLink: /api/v1/namespaces/monitoring/services/grafana
    uid: 80cd25dd-4d92-4533-b431-638e72fc3a24
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.152.183.116
    clusterIPs:
    - 10.152.183.116
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32000
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: grafana
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 192.168.1.223
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"prometheus.io/port":"9090","prometheus.io/scrape":"true"},"name":"prometheus-service","namespace":"monitoring"},"spec":{"ports":[{"nodePort":30000,"port":8080,"targetPort":9090}],"selector":{"app":"prometheus-server"},"type":"LoadBalancer"}}
      prometheus.io/port: "9090"
      prometheus.io/scrape: "true"
    creationTimestamp: "2022-04-14T15:30:08Z"
    name: prometheus-service
    namespace: monitoring
    resourceVersion: "1641814"
    selfLink: /api/v1/namespaces/monitoring/services/prometheus-service
    uid: 9f8af3a2-05cc-45f1-ab49-44daf689b5f9
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.152.183.165
    clusterIPs:
    - 10.152.183.165
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30000
      port: 8080
      protocol: TCP
      targetPort: 9090
    selector:
      app: prometheus-server
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 192.168.1.224
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-09-02T10:56:48Z"
    name: aqua-db-postgres-exporter
    namespace: monitoring
    resourceVersion: "10152780"
    selfLink: /api/v1/namespaces/monitoring/services/aqua-db-postgres-exporter
    uid: 23497f84-9eb1-4491-9636-6f10897ab531
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.152.183.229
    clusterIPs:
    - 10.152.183.229
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31149
      port: 9187
      protocol: TCP
      targetPort: 9187
    selector:
      app: aqua-db-postgres-exporter
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 192.168.1.231
kind: List
metadata:
  resourceVersion: ""
